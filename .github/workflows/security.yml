name: Security

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * 1'  # Weekly on Mondays

jobs:
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          libpam0g-dev \
          libjson-c-dev \
          pkg-config \
          libsystemd-dev
          
    - name: Run gosec security scanner
      uses: securecodewarrior/github-action-gosec@master
      with:
        args: '-fmt sarif -out gosec-report.sarif ./...'
        
    - name: Upload gosec report
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: gosec-report.sarif
        
  dependency-check:
    name: Dependency Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          libpam0g-dev \
          libjson-c-dev \
          pkg-config \
          libsystemd-dev
          
    - name: Install govulncheck
      run: go install golang.org/x/vuln/cmd/govulncheck@latest
      
    - name: Run vulnerability check
      run: govulncheck ./...
      
    - name: Check for known vulnerabilities
      run: |
        go list -json -m all | nancy sleuth
      continue-on-error: true
      
  codeql:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    
    permissions:
      actions: read
      contents: read
      security-events: write
      
    strategy:
      fail-fast: false
      matrix:
        language: [ 'go' ]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}
        
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          libpam0g-dev \
          libjson-c-dev \
          pkg-config \
          libsystemd-dev
          
    - name: Autobuild
      uses: github/codeql-action/autobuild@v2
      
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      
  trivy:
    name: Trivy Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
        
    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'trivy-results.sarif'
        
  semgrep:
    name: Semgrep Analysis
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run Semgrep
      uses: returntocorp/semgrep-action@v1
      with:
        config: >-
          p/security-audit
          p/golang
          p/owasp-top-ten
          p/cwe-top-25
          
  license-check:
    name: License Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        
    - name: Install go-licenses
      run: go install github.com/google/go-licenses@latest
      
    - name: Check licenses
      run: |
        go-licenses check ./...
        go-licenses report ./... > licenses-report.txt
        
    - name: Upload licenses report
      uses: actions/upload-artifact@v3
      with:
        name: licenses-report
        path: licenses-report.txt
        
  secrets-scan:
    name: Secrets Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run TruffleHog
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD
        
  supply-chain:
    name: Supply Chain Security
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          libpam0g-dev \
          libjson-c-dev \
          pkg-config \
          libsystemd-dev
          
    - name: Generate SBOM
      run: |
        go install sigs.k8s.io/bom/cmd/bom@latest
        bom generate -o sbom.spdx .
        
    - name: Upload SBOM
      uses: actions/upload-artifact@v3
      with:
        name: sbom
        path: sbom.spdx
        
  security-scorecard:
    name: OpenSSF Scorecard
    runs-on: ubuntu-latest
    
    permissions:
      security-events: write
      id-token: write
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        persist-credentials: false
        
    - name: Run analysis
      uses: ossf/scorecard-action@v2.3.1
      with:
        results_file: results.sarif
        results_format: sarif
        publish_results: true
        
    - name: Upload results
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: results.sarif